{"version":3,"sources":["components/button/Button.jsx","components/image/Image.jsx","components/input/Input.jsx","components/icons/IconsCustom.jsx","components/title/Title.jsx","components/sliderItem/SliderItem.jsx","components/carritoFooter/CarritoFooter.jsx","components/foodInfo/FoodInfo.jsx","components/locationInfo/LocationInfo.jsx","components/item/Item.jsx","components/sliderCategories/SliderCategories.jsx","components/ingredientsInfo/IngredientsInfo.jsx","components/sliderProducts/SliderProducts.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","props","state","event","preventDefault","stopPropagation","this","isDisabled","handleClick","content","isBig","isPrimary","className","onClick","handleNothing","React","Component","Image","alt","isFood","isLeft","IconsCustom","icon","Title","text","value","SliderItem","title","dateExprirePromotion","isMobile","id","SliderProducts","currentSection","setFocus","sectionId","document","querySelector","scrollIntoView","behavior","log","console","scrollLeft","setState","selectedSection","sections","querySelectorAll","previousSection","classList","remove","add","scrollValue","target","handleScrollLink","App","window","innerWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d33b405f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Button.css';\n\nclass Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleNothing(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    render() {\n        const { isDisabled, handleClick, content, isBig, isPrimary, className } = this.props;\n        return (\n            <button className={`${isBig ? \"big\" : \"small\"}\n            ${isPrimary ? \"primary\" : \"secondary\"}\n            ${isDisabled ? \"disabled\" : ''}\n            ${className ? className : ''}`} onClick={isDisabled ? this.handleNothing : handleClick}>\n                {content}\n            </button>\n        );\n    }  \n}\n    \nexport default Button;\n","import React, { Component } from 'react';\nimport './Image.css';\n\nclass Image extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleNothing(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    render() {\n        const { alt, handleClick, className, isBig, isFood, isLeft } = this.props;\n        return (\n            <div className={`image ${isLeft ? '' : 'image-centralized'} \n            ${isBig ? \"big\" : \"small\"}\n            ${isFood ? \"food\" : \"promotion\"}\n            ${className ? className : ''}`} \n            onClick={handleClick ? handleClick : this.handleNothing}\n            alt={alt} />\n        );\n    }  \n}\n    \nexport default Image;\n","import React, { Component } from 'react';\nimport './Input.css';\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            error: '',\n        };\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.handleChangeInput = this.handleChangeInput.bind(this);\n        this.validateInput = this.validateInput.bind(this);\n    }\n    \n    handleChangeInput(event) {\n        const target = event.target;\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\n        this.setState({\n            value: value,\n        });\n    }\n    \n    handleKeyPress(event) {\n        if (event.key === \"Enter\") {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n    }\n    \n    validateInput(event) {\n        const { hasError } = this.props;\n        let input = event.target;\n        let name = event.target.name;\n        let errorMessage = null;\n        switch (true) {\n            case !input.value:\n                errorMessage = `Debes ingresar tu ${name}.`;\n            break;\n            case hasError:\n                errorMessage = `${name} incorrecta.`;\n            break;\n            case input.minLength > -1 && input.value.length < input.minLength:\n                errorMessage = `Tu ${name} debe contener al menos ${input.minLength} caracteres.`;\n            break;\n            case input.maxLength > -1 && input.value.length > input.maxLength:\n                errorMessage = `Tu ${name} debe contener hasta ${input.maxLength} caracteres.`;\n            break;\n            default:\n                errorMessage = null;\n            break;\n        }\n    \n        this.setState({ error: errorMessage });\n    }\n\n    render() {\n        const { error } = this.state;\n        const { placeholder, name, minLength, maxLength, type, className, hasIconLeft } = this.props;\n        let childrenWithExtraProp = [];\n    \n        if (this.props.children) {\n            childrenWithExtraProp = React.Children.map(this.props.children, child => {\n                return React.cloneElement(child, {\n                    className: `${child.props.className} ${error ? \"with-error error-text\" : ''}`\n                });\n              });\n        }\n        return (\n            <>\n                <fieldset aria-hidden=\"true\" className={`input-icons ${error ? '' : 'input-margin'}`}>\n                    <legend>\n                        <span className=\"text2\">{`${placeholder ? placeholder : name} *`}</span>\n                    </legend>\n                    {this.props.children && \n                        childrenWithExtraProp[0] /* el ícono */}\n                    \n                    <input\n                        id={name}\n                        name={name}\n                        className={`text1 ${hasIconLeft ? \"icon-left\" : ''}\n                            ${error=== null ? \"valid\" : error ? \"error\" : ''\n                        } ${className ? className : ''}`}\n                        type={type}\n                        required\n                        minLength={minLength}\n                        maxLength={maxLength}\n                        value={this.state.value}\n                        onChange={this.handleChangeInput}\n                        onKeyPress={this.handleKeyPress}\n                        onBlur={this.validateInput}\n                    />\n                    \n                    {childrenWithExtraProp[1] /* el ojo */}\n                </fieldset>\n                {error &&\n                    <span className=\"text2 error-text\">{error}</span>\n                }\n            </>\n        );\n    }  \n}\n    \nexport default Input;","import React, { Component } from 'react';\nimport './IconsCustom.css';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport AlternateEmailOutlinedIcon from '@material-ui/icons/AlternateEmailOutlined';\nimport CheckCircleOutlinedIcon from '@material-ui/icons/CheckCircleOutlined';\nimport ChevronLeftOutlinedIcon from '@material-ui/icons/ChevronLeftOutlined';\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\nimport FaceOutlinedIcon from '@material-ui/icons/FaceOutlined';\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport NavigationOutlinedIcon from '@material-ui/icons/NavigationOutlined';\nimport NotificationsActiveOutlinedIcon from '@material-ui/icons/NotificationsActiveOutlined';\nimport NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined';\nimport PaymentOutlinedIcon from '@material-ui/icons/PaymentOutlined';\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\nimport VisibilityOffOutlinedIcon from \"@material-ui/icons/VisibilityOffOutlined\";\n\nclass IconsCustom extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const { icon, handleClick, className } = this.props;\n        switch (icon) {\n            case \"AccountCircleOutlinedIcon\":\n                return (\n                    <AccountCircleOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"AddCircleOutlineOutlinedIcon\":\n                return (\n                    <AddCircleOutlineOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"AlternateEmailOutlinedIcon\":\n                return (\n                    <AlternateEmailOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"CheckCircleOutlinedIcon\":\n                return (\n                    <CheckCircleOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"DeleteForeverOutlinedIcon\":\n                return (\n                    <DeleteForeverOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"ExpandMoreOutlinedIcon\":\n                return (\n                    <ExpandMoreOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"FaceOutlinedIcon\":\n                return (\n                    <FaceOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"HelpOutlineOutlinedIcon\":\n                return (\n                    <HelpOutlineOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"HomeOutlinedIcon\":\n                return (\n                    <HomeOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"LockOpenOutlinedIcon\":\n                return (\n                    <LockOpenOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"LockOutlinedIcon\":\n                return (\n                    <LockOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"NotificationsActiveOutlinedIcon\":\n                return (\n                    <NotificationsActiveOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"NotificationsOutlinedIcon\":\n                return (\n                    <NotificationsOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"PaymentOutlinedIcon\":\n                return (\n                    <PaymentOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"RemoveCircleOutlineOutlinedIcon\":\n                return (\n                    <RemoveCircleOutlineOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"SearchOutlinedIcon\":\n                return (\n                    <SearchOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"StarBorderOutlinedIcon\":\n                return (\n                    <StarBorderOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"VisibilityOutlinedIcon\":\n                return (\n                    <VisibilityOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"VisibilityOffOutlinedIcon\":\n                return (\n                    <VisibilityOffOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            \n            case \"arrowDown\":\n                return (\n                    <ExpandMoreOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"arrowLeft\":\n                return (\n                    <ChevronLeftOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"arrowRight\":\n                return (\n                    <ChevronRightOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"arrowUp\":\n                return (\n                    <ExpandLessOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n            case \"NavigationOutlinedIcon\":\n                return (\n                    <NavigationOutlinedIcon className={`icon icon-color ${className ? className : ''} rotate-percentage`} onClick={handleClick} /> \n                );\n            break;\n            default:\n                return (\n                    <ExpandMoreOutlinedIcon className={`icon icon-color ${className ? className : ''}`} onClick={handleClick} /> \n                );\n            break;\n        }\n\n    }\n}\n\nexport default IconsCustom;","import React, { Component } from 'react';\nimport './Title.css';\n\nclass Title extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    \n    render() {\n        const { text, value, className } = this.props;\n        return (\n                <div className= {`title-space-between ${className ? className : ''}`}>\n                    <h3>{text}</h3>\n                    {value &&\n                        <h3>${value}</h3>\n                    }\n                </div>\n                \n        );\n    }  \n}\n    \nexport default Title;\n","import React, { Component } from 'react';\nimport './SliderItem.css';\nimport Title from '../title/Title';\nimport Image from '../image/Image';\nimport Button from '../button/Button';\n\nclass SliderItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    \n    render() {\n        const { title, dateExprirePromotion, value, isMobile, id } = this.props;\n        return (\n            <div id={id} className={`container-item container-slider-item`}>\n                <Title className=\"control-overflow with-padding\" text={title} />\n                <Image alt=\"foto\" className=\"Combo short-divider\" isBig={!isMobile} isFood={dateExprirePromotion ? false : true}/>\n                <div className=\"titles-space-between short-divider\">\n                    <b className=\"text1 text1-bold\"> ${value} </b>\n                    <Button isDisabled={false} content=\"Agregar\" isBig={false} isPrimary={true}/>\n                </div>\n\n            </div>\n        );\n    }  \n}\n    \nexport default SliderItem;\n","import React, { Component } from 'react';\nimport './CarritoFooter.css';\nimport Button from '../button/Button';\nimport Title from '../title/Title';\n\nclass CarritoFooter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    \n    goPromotions = () => {\n        \n    }\n\n    render() {\n        const { title, value } = this.props;\n        return (\n            <div className=\"container-carrito-footer\">\n                <Title text={title} value={value} />\n                <div className=\"container-carrito-footer-buttons\">\n                    <Button handleClick={this.goPromotions} content=\"Seguir Comprando\" isBig={true} isPrimary={true} className=\"divider\" />\n                    <Button content=\"Finalizar Compra\" isBig={true} isPrimary={false} className=\"divider\"/>\n\n                </div>\n            </div>\n        );\n    }  \n}\n    \nexport default CarritoFooter;\n","import React, { Component } from 'react';\nimport './FoodInfo.css';\nimport Title from '../title/Title';\n\nclass FoodInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    \n    render() {\n        const { value } = this.props;\n        return (\n            <div className=\"container-food-info\">\n                <Title text={\"Doble combo\"} value={value} />\n                <div className=\"titles-space-between divider\">\n                    <span>\n                        <span className=\"text1\">Calorias: </span>\n                        <b className=\"text1 text1-bold\">120 cal</b>\n                    </span>\n                    <span>\n                        <span className=\"text1\">Grasas: </span>\n                        <b className=\"text1 text1-bold\">40 g</b>\n                    </span>\n                </div>\n                <div className=\"titles-space-between\">\n                    <span>\n                        <span className=\"text1\">Proteinas: </span>\n                        <b className=\"text1 text1-bold\">80 g</b>\n                    </span>\n                    <span>\n                        <span className=\"text1\">Hidratos: </span>\n                        <b className=\"text1 text1-bold\">40 g</b>\n                    </span>\n                </div>\n            </div>\n        );\n    }  \n}\n    \nexport default FoodInfo;\n","import React, { Component } from 'react';\nimport './LocationInfo.css';\nimport Title from '../title/Title';\n\nclass LocationInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    \n    render() {\n        const { value } = this.props;\n        return (\n            <div className=\"container-location-info\">\n                <Title text={\"McBurger 9 de Julio\"} value={value} />\n                <div className=\"titles-space-between divider\">\n                    <span>\n                        <span className=\"text1\">Calorias: </span>\n                        <b className=\"text1 text1-bold\">120 cal</b>\n                    </span>\n                </div>\n                <div className=\"titles-space-between\">\n                    <span>\n                        <span className=\"text1\">Proteinas: </span>\n                        <b className=\"text1 text1-bold\">80 g</b>\n                    </span>\n                    <span>\n                        <b className=\"text1 text1-bold\">Abierto</b>\n                    </span>\n                </div>\n            </div>\n        );\n    }  \n}\n    \nexport default LocationInfo;\n","import React, { Component } from 'react';\nimport './Item.css';\nimport Button from '../button/Button';\nimport Image from '../image/Image';\nimport Title from '../title/Title';\nimport IconsCustom from '../icons/IconsCustom';\n\nclass Item extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    \n    render() {\n        const { title, value, description, dateExprirePromotion, isDetail, isCarrito, quantity } = this.props;\n        if (isCarrito || (dateExprirePromotion && !isDetail)) {\n            return (\n                <div className={`container-item container-carrito`}>\n                    <div className=\"container-photo-description\">\n\n                        <Image alt=\"foto\" className=\"Combo\" isBig={false} isLeft={true} isFood={dateExprirePromotion ? false : true}/>\n                        <div className=\"photo-description\">\n                            <Title className=\"control-overflow\" text={title} />\n                            <div className=\"item-description divider\">\n                                <span className=\"text1\"> {description} </span>\n                            </div>\n                        </div>\n                    </div>\n                    {isCarrito ?\n                        <div className=\"footer carrito-options\">\n                            <IconsCustom icon=\"DeleteForeverOutlinedIcon\" />\n                            <div className=\"carrito-change-quantity\">\n                                <IconsCustom icon=\"RemoveCircleOutlineOutlinedIcon\" />\n                                <b className=\"text1 text1-bold\"> {quantity} </b>\n                                <IconsCustom icon=\"AddCircleOutlineOutlinedIcon\" />\n                            </div>\n                            <b className=\"text1 text1-bold\"> ${value} </b>\n                        </div>\n                    :\n                        <div className=\"space-around footer\">\n                            <b className=\"text1 text1-bold\"> ${value} </b>\n                            <b className=\"text1 text1-bold\">Valido hasta {dateExprirePromotion}</b>\n                        </div>\n                    }\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className={`container-item \n                ${dateExprirePromotion ? 'promotion' : 'container-food'}\n                ${isDetail ? '' : 'container-item-without-detail'} `}>\n                    <Image alt=\"foto\" className=\"Combo\" isBig={true} isFood={dateExprirePromotion ? false : true}/>\n                    \n                    <Title className=\"titles-item-space\" text={title} value={value} />\n                    {isDetail &&\n                        <>\n                            <div className=\"item-description\">\n                                <span className=\"text1\"> {description} </span>\n                            </div>\n                            {dateExprirePromotion &&\n                                <div className={`divider ${isDetail ? 'text-centralized' : 'titles-item-space'}`}>\n                                    <b className=\"text1 text1-bold\">Valido hasta {dateExprirePromotion}</b>\n                                </div>\n                            }\n                            <div className=\"divider desktop-centralized\">\n                                <Button isDisabled={false} content=\"Agregar\" isBig={true} isPrimary={true} className=\"centralized\" />\n                            </div>\n                        </>\n                    }\n                    \n                </div>\n            );\n        }\n    }  \n}\n    \nexport default Item;\n","import React, { Component } from 'react';\nimport './SliderCategories.css';\nimport IconsCustom from '../icons/IconsCustom';\n\nclass SliderCategories extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentSection: 0,\n            selectedSection: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.setFocus(0);\n    }\n\n    handleScrollLink(event, sectionId) {\n        event.preventDefault();\n        if ((sectionId > -1) && (sectionId < 5)) {\n            document.querySelector(`#slider-categories-${sectionId}`).scrollIntoView({\n                behavior: 'smooth'\n            });\n            this.setState({ currentSection: sectionId });\n            this.setFocus(sectionId);\n        }\n    }\n\n    setFocus(sectionId) {\n        const { selectedSection } = this.state;\n        let sections = document.querySelectorAll(\".slider-data-item\");\n        let previousSection = sections[selectedSection];\n        if (previousSection) {\n            previousSection.classList.remove(\"selected\");\n        }\n        let section = sections[sectionId];\n        section.classList.add(\"selected\");\n        this.setState({ selectedSection: sectionId, currentSection: sectionId });\n    }\n    \n    render() {\n        const { hasArrows, isMobile } = this.props;\n        const { currentSection } = this.state;\n        return (\n            <div className=\"container-slider-data-categories\">\n                {hasArrows && isMobile &&\n                    <div className=\"container-slider-arrow\" >\n                        <a onClick={(event) => this.handleScrollLink(event, currentSection-1)}>\n                            <IconsCustom icon=\"arrowLeft\" />\n                        </a>\n                    </div>\n                }\n                <div className={`${isMobile ? 'container-slider-data' : ''}`}>\n\n                    <div className={`slider-data ${isMobile ? '' : 'centralized'}`}>\n                        <div id=\"slider-categories-0\" className=\"text1 slider-data-item text-centralized\" onClick={() => this.setFocus(0)}> \n                            <b className=\"text1 text1-bold\"> Carne </b> \n                        </div>\n                        <div id=\"slider-categories-1\" className=\"text1 slider-data-item text-centralized\" onClick={() => this.setFocus(1)}>\n                            <b className=\"text1 text1-bold\"> Pollo </b>\n                        </div>\n                        <div id=\"slider-categories-2\" className=\"text1 slider-data-item text-centralized\" onClick={() => this.setFocus(2)}> \n                            <b className=\"text1 text1-bold\"> Ensaladas </b>\n                        </div>\n                        <div id=\"slider-categories-3\" className=\"text1 slider-data-item text-centralized\" onClick={() => this.setFocus(3)}>\n                            <b className=\"text1 text1-bold\"> Papas </b>\n                        </div>\n                        <div id=\"slider-categories-4\" className=\"text1 slider-data-item text-centralized\" onClick={() => this.setFocus(4)}>\n                            <b className=\"text1 text1-bold\"> Nuggets </b>\n                        </div>\n                    </div>\n                </div>\n                {hasArrows && isMobile &&\n                    <div className=\"container-slider-arrow\" >\n                        <a onClick={(event) => this.handleScrollLink(event, currentSection+1)}>\n                            <IconsCustom icon=\"arrowRight\" />\n                        </a>\n                    </div>\n                }\n                \n            </div>\n        );\n    }  \n}\n    \nexport default SliderCategories;\n","import React, { Component } from 'react';\nimport './IngredientsInfo.css';\nimport Title from '../title/Title';\n\nclass IngredientsInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    \n    render() {\n        const { value } = this.props;\n        return (\n            <div className=\"container-ingredients-info\">\n                <Title text={\"Ingredientes\"} value={value} />\n                <div className=\"titles-space-between divider references\">\n                        <div className=\"text1 ingredientItem\"> Carne vacuna </div>\n                        <div className=\"text1 ingredientItem\"> Queso cheddar </div>\n                        <div className=\"text1 ingredientItem\"> Lechuga </div>\n                        <div className=\"text1 ingredientItem\"> Tomate </div>\n                        <div className=\"text1 ingredientItem\"> Ketchup </div>\n                </div>\n            </div>\n        );\n    }  \n}\n    \nexport default IngredientsInfo;\n","import React, { Component } from 'react';\nimport './SliderProducts.css';\nimport Title from '../title/Title';\nimport SliderItem from '../sliderItem/SliderItem';\nimport IconsCustom from '../icons/IconsCustom';\n\nclass SliderProducts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentSection: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.setFocus(0);\n    }\n\n    handleScrollLink(event, sectionId) {\n        event.preventDefault();\n        if ((sectionId > -1) && (sectionId < 6)) {\n            document.querySelector(`#slider-categories-${sectionId}`).scrollIntoView({\n                behavior: 'smooth'\n            });\n            document.querySelector(`#sliderProduct${sectionId}`).scrollIntoView({\n                behavior: 'smooth'\n            });\n            let log = document.querySelector(`.container-slider-products-data`);\n            console.log(sectionId);\n            console.log(log.scrollLeft);\n            this.setState({ currentSection: sectionId });\n            this.setFocus(sectionId);\n        }\n    }\n\n    setFocus(sectionId) {\n        const { selectedSection } = this.state;\n        let sections = document.querySelectorAll(\".slider-product-number-item\");\n        let previousSection = sections[selectedSection];\n        if (previousSection) {\n            previousSection.classList.remove(\"selected\");\n        }\n        let section = sections[sectionId];\n        section.classList.add(\"selected\");\n        this.setState({ selectedSection: sectionId, currentSection: sectionId });\n    }\n\n    viewScroll(event) {\n        let scrollValue = event.target.scrollLeft;\n        switch (true) {\n            case scrollValue < 5:\n                this.setFocus(0);\n            break;\n            case 5 <= scrollValue < 10:\n                this.setFocus(1);\n            break;\n            case 10 <= scrollValue < 15:\n                this.setFocus(2);\n            break;\n            case 15 <= scrollValue < 29:\n                this.setFocus(3);\n            break;\n            case 29 <= scrollValue < 49:\n                this.setFocus(4);\n            break;\n            case 49 <= scrollValue < 333:\n                this.setFocus(5);\n            break;\n            case 333 <= scrollValue < 650:\n                this.setFocus(6);\n            break;\n            default:\n                this.setFocus(0);\n            break;\n        }\n    }\n    \n    render() {\n        const { title, dateExprirePromotion, value, isMobile } = this.props;\n        const { currentSection } = this.state;\n        return (\n            <div className={`container-slider-products-info`}>\n                <Title text={\"Otros productos\"} />\n\n                <div className={`container-slider-products-data ${isMobile ? 'short-divider' : 'divider'}`} /*onScroll={(event) => this.viewScroll(event)}>*/>\n                    <div className=\"slider-products-data\">\n                        <SliderItem id=\"sliderProduct0\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(0)} />\n                        <SliderItem id=\"sliderProduct1\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(1)} />\n                        <SliderItem id=\"sliderProduct2\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(2)} />\n                        <SliderItem id=\"sliderProduct3\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(3)} />\n                        <SliderItem id=\"sliderProduct4\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(4)} />\n                        <SliderItem id=\"sliderProduct5\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(5)} />\n                    </div>\n                </div>  \n                \n\n                <div className={`container-slider-data-categories container-slider-product-data-categories ${isMobile ? 'short-divider' : 'container-slider-products-categories-top'}`}>\n                    <div className=\"container-slider-arrow container-slider-product-arrow\" >\n                        <a onClick={(event) => this.handleScrollLink(event, currentSection-1)}>\n                            <IconsCustom icon=\"arrowLeft\" />\n                        </a>\n                    </div>\n                    <div className={`container-slider-data ${isMobile ? 'container-slider-product-data' : ''}`}>\n\n                        <div className={`slider-data slider-product-data ${isMobile ? '' : 'centralized'}`}>\n                            <div id=\"slider-categories-0\" className=\"text1 slider-product-number-item text-centralized\" onClick={(event) => this.handleScrollLink(event, 0)}> \n                                <b className=\"text1 text1-bold\"> 1 </b> \n                            </div>\n                            <div id=\"slider-categories-1\" className=\"text1 slider-product-number-item text-centralized\" onClick={(event) => this.handleScrollLink(event, 1)}> \n                                <b className=\"text1 text1-bold\"> 2 </b>\n                            </div>\n                            <div id=\"slider-categories-2\" className=\"text1 slider-product-number-item text-centralized\" onClick={(event) => this.handleScrollLink(event, 2)}> \n                                <b className=\"text1 text1-bold\"> 3 </b>\n                            </div>\n                            <div id=\"slider-categories-3\" className=\"text1 slider-product-number-item text-centralized\" onClick={(event) => this.handleScrollLink(event, 3)}> \n                                <b className=\"text1 text1-bold\"> 4 </b>\n                            </div>\n                            <div id=\"slider-categories-4\" className=\"text1 slider-product-number-item text-centralized\" onClick={(event) => this.handleScrollLink(event, 4)}> \n                                <b className=\"text1 text1-bold\"> 5 </b>\n                            </div>\n                            <div id=\"slider-categories-5\" className=\"text1 slider-product-number-item text-centralized\" onClick={(event) => this.handleScrollLink(event, 5)}> \n                                <b className=\"text1 text1-bold\"> 6 </b>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"container-slider-arrow container-slider-product-arrow\" >\n                        <a onClick={(event) => this.handleScrollLink(event, currentSection+1)}>\n                            <IconsCustom icon=\"arrowRight\" />\n                        </a>\n                    </div>\n                </div>\n\n                {/*!isMobile &&\n                    <div className={`container-slider-products-data ${isMobile ? 'short-divider' : 'divider'}`}>\n                        <div className=\"slider-products-data\">\n                            <SliderItem id=\"sliderProduct0\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(0)} />\n                            <SliderItem id=\"sliderProduct1\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(1)} />\n                            <SliderItem id=\"sliderProduct2\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(2)} />\n                            <SliderItem id=\"sliderProduct3\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(3)} />\n                            <SliderItem id=\"sliderProduct4\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(4)} />\n                            <SliderItem id=\"sliderProduct5\" isMobile={isMobile} title={title} dateExprirePromotion={dateExprirePromotion} value={value} onClick={() => this.setFocus(5)} />\n                        </div>\n                    </div>\n                */}\n            </div>\n        );\n    }  \n}\n    \nexport default SliderProducts;\n","import './App.css';\nimport Button from './components/button/Button';\nimport Input from './components/input/Input';\nimport Image from './components/image/Image';\nimport IconsCustom from './components/icons/IconsCustom';\nimport CarritoFooter from './components/carritoFooter/CarritoFooter';\nimport FoodInfo from './components/foodInfo/FoodInfo';\nimport LocationInfo from './components/locationInfo/LocationInfo';\nimport Item from './components/item/Item';\nimport SliderCategories from './components/sliderCategories/SliderCategories';\nimport IngredientsInfo from './components/ingredientsInfo/IngredientsInfo';\nimport SliderItem from './components/sliderItem/SliderItem';\nimport SliderProducts from './components/sliderProducts/SliderProducts';\n\nconst mobileMax = 425;\nconst tabletMax = 992;\n\nfunction App() {\n    const isMobile = window.innerWidth <= tabletMax;\n    return (\n        <div className=\"App\">\n            {/*<Button isDisabled={true} content=\"comidas\" isBig={true} />\n            <Button content=\"comidas\" isBig={false} />\n            <Button content=\"locales\" isBig={true} />\n            <button>carrito</button>\n            <Button isDisabled={false} content=\"nosotros\" isPrimary={false} isBig={true} />\n            <Input placeholder=\"name\" name=\"name\" minLength={3} maxLength={12} type=\"text\" hasIconLeft={true} >\n                <IconsCustom icon=\"VisibilityIcon\" className=\"right\" />\n    </Input>\n            <Image alt=\"foto\" className=\"Combo\" isBig={false} isFood={false}/>\n            <IconsCustom icon=\"NavigationOutlinedIcon\" />\n            <CarritoFooter title=\"Total\" value={123}/>\n            <Item title=\"Pollo con cheddar\" value={700} description=\"doble queso cheddar\" isDetail={true}/>\n            <Item title=\"Pollo con cheddar\" value={700} description=\"doble queso cheddar\" isDetail={false}/>\n            <Item title=\"Pollo con cheddar\" value={700} description=\"doble queso cheddar\" date=\"08/03\" isDetail={true}/>\n        <FoodInfo />\n        <LocationInfo />\n        <SliderCategories hasArrows={true} isMobile={true} />\n        <SliderCategories hasArrows={true} isMobile={false} />\n        <IngredientsInfo />\n        <Item title=\"Pollo con cheddar\" value={700} description=\"doble queso cheddar\" dateExprirePromotion=\"08/03\" isDetail={false}/>\n                <Item title=\"Pollo con cheddar\" quantity={2} value={700} description=\"doble queso cheddar\" dateExprirePromotion=\"08/03\" isDetail={false} isCarrito={false} />\n        <Item title=\"Pollo con cheddar\" quantity={2} value={700} description=\"doble queso cheddar\" dateExprirePromotion=\"08/03\" isDetail={false} isCarrito={true} />\n        <SliderItem title=\"Bacon full\" dateExprirePromotion=\"08/03\" value={1400} />\n        */}\n        <SliderProducts isMobile={true} title=\"Bacon full\" dateExprirePromotion=\"11/03\" value={750} isMobile={isMobile}/>\n        \n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}